events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Session configuration - Fixed cookie extraction
    map $http_cookie $session_id {
        "~*portfolio_session=([^;]+)" $1;
        default "";
    }

    # Upstream servers
    upstream frontend {
        server 172.20.0.20:80;
        keepalive 32;
    }

    upstream backend {
        server 172.20.0.30:3001;
        keepalive 32;
    }

    # HTTP Server - Main entry point
    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;

        # Health check endpoint for nginx itself
        location /health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }

        # =================================================================
        # AUTHENTICATION ENDPOINTS
        # =================================================================
        
        # Login endpoint - Creates session cookie
        location = /auth/login {
            auth_basic "Portfolio Access";
            auth_basic_user_file /etc/nginx/auth/.htpasswd;
            
            # Set session cookie on successful auth
            add_header Set-Cookie "portfolio_session=authenticated_$msec; Path=/; HttpOnly; SameSite=Strict; Max-Age=3600" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            
            return 200 '{"success": true, "message": "Authentication successful"}';
            add_header Content-Type application/json;
        }
        
        # Logout endpoint - Clears session cookie
        location = /auth/logout {
            add_header Set-Cookie "portfolio_session=; Path=/; HttpOnly; SameSite=Strict; Max-Age=0" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            
            return 200 '{"success": true, "message": "Logged out successfully"}';
            add_header Content-Type application/json;
        }
        
        # Session check endpoint
        location = /auth/check {
            if ($session_id = "") {
                return 401 '{"success": false, "message": "Not authenticated"}';
            }
            
            add_header Content-Type application/json;
            return 200 '{"success": true, "message": "Authenticated"}';
        }

        # Internal endpoint for session check
        location = /internal/check_session {
            internal;
            if ($session_id = "") {
                return 401 '{"success": false, "message": "Authentication required", "redirect": "/auth/login"}';
            }
            return 204;
        }

        # =================================================================
        # PUBLIC BACKEND API ROUTES
        # =================================================================

        # Public contact form submission (POST only)
        location = /api/contact {
            limit_except POST {
                deny all;
            }
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Authenticated-User "public";
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Public email validation
        location = /api/contact/validate-email {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Public health check
        location = /api/health {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # =================================================================
        # PROTECTED BACKEND API ROUTES (NGINX session-based auth)
        # =================================================================

        # Protected admin API
        location /api/admin {
            auth_request /internal/check_session;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Authenticated-User $session_id;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Protected contact GET and subroutes (except validate-email)
        location ^~ /api/contact {
            auth_request /internal/check_session;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Authenticated-User $session_id;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Catch-all for other protected API routes
        location /api/ {
            auth_request /internal/check_session;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Authenticated-User $session_id;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # =================================================================
        # FRONTEND ROUTES
        # =================================================================
        
        # Mailbox route - Session cookie required
        location /mailbox {
            # Check for session cookie first
            if ($session_id = "") {
                # Redirect to login page instead of showing basic auth
                return 302 /login;
            }
            
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout configuration - 60 seconds
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Login page - Public (shows login form)
        location /login {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout configuration - 60 seconds
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Static assets from frontend - Cache optimized
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Cache static assets
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_cache_bypass $http_upgrade;
            
            # Timeout configuration - 60 seconds
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # All other frontend routes - Public (React Router SPA)
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout configuration - 60 seconds
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
}